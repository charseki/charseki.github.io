<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Encrypt_Demo</title>
    <url>/2020/11/29/Encrypt_Demo/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误,请重新输入！" data-whm="文章不能被校验,不过您还是能看看解密后的内容！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="您好,请在下方输入密码！" /><label>您好,请在下方输入密码！</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="19c06c3d70add7aa0c74b425e5af2935f9176dfb0934fb3d9d1c5ead7337e7cb">f0e260aa95ce3ceffcb2b4f9bd98f3f35189ff6848982a804d96cce2bf6aba109b6e9673bb192ee04d918b10de44b772208572ab4bd84e5baf09905fa8d8eec1229b9bd21eb165cc2371b188aec6d6e4940da0597c62a830892a92f05db74a9d1537e7db0c82eba8f1ce1e769bd062aa65a5221b524fbed9d65ded3b659c363d9a30130d01be9f5c3891bee6972c5d9614d13320b7212dc18691a8decc461a4381e776f1523ebba2aaf429e5c851a1e3962014f99294da2940c9c42cc0df5e83104a11712d78e4a431d42d0b933dc8159259545e24018dafeb2402d57e39a4797a98795b985224dcaf3599ab90222f2b12c3e70378795a422a7011e03a284695084eee849f4e217724b884e0f318f296d116842ee5189b54590870d388b867481bb30446bab709f725f1cdc287f6b4367a5b2362e859e9a0e57188fbe9110fb42c62c360b173ddcd63de733fc7cf0820c1b857113570710fd7c3492b1daf1207b2c4bc1c0e9c2f9d7482346de38d5ab4c2f4140f9bf8a046e561ef0c931f0818ee2cb9d6789ae2fd17ceebd072d72100a901943d7ceaa5422df02f3362d1124ae52a975395aca8318a23dac8681c2e08</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>Encrypted</tag>
      </tags>
  </entry>
  <entry>
    <title>LNMP之Mysql源码编译安装</title>
    <url>/2020/12/06/LNMP%E4%B9%8BMysql%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h1 id="004-LNMP之Mysql源码编译安装"><a href="#004-LNMP之Mysql源码编译安装" class="headerlink" title="004-LNMP之Mysql源码编译安装"></a>004-LNMP之Mysql源码编译安装</h1><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a><strong>正文</strong></h2><p>搜狐镜像源：<a href="http://mirrors.sohu.com/">http://mirrors.sohu.com/</a> （推荐，国内源下载速度嗖嗖的）</p>
<p>这里有很多常用的镜像，Mysql的源码包也在里面。</p>
<h3 id="Mysql数据库的一些依赖包"><a href="#Mysql数据库的一些依赖包" class="headerlink" title="Mysql数据库的一些依赖包"></a>Mysql数据库的一些依赖包</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install gcc gcc-c++ make tar openssl openssl-devel cmake ncurses ncurses-devel</span><br></pre></td></tr></table></figure>

<h3 id="Mysql的编译安装"><a href="#Mysql的编译安装" class="headerlink" title="Mysql的编译安装"></a>Mysql的编译安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建mysql用户去启动数据库进程</span></span><br><span class="line">useradd -s /sbin/nologin mysql</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src</span><br><span class="line">tar -zxvf mysql-5.6.39.tar.gz</span><br><span class="line"><span class="built_in">cd</span> mysql-5.6.39</span><br><span class="line">cmake -DCMAKE_INSTALL_PREFIX=/usr/<span class="built_in">local</span>/mysql -DMYSQL_DATADIR=/data/mysql -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DWITH_EXTRA_CHARSETS:STRING=all -DWITH_DEBUG=0 -DWITH_SSL=yes -DWITH_READLINE=1 -DENABLED_LOCAL_INFILE=1</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line">cp /usr/<span class="built_in">local</span>/src/mysql-5.6.39/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line">chmod a+x /etc/init.d/mysqld</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="编译参数说明"><a href="#编译参数说明" class="headerlink" title="编译参数说明"></a>编译参数说明</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 指定Mysql的安装目录</span></span><br><span class="line">CMACK_INSTALL_PREFIX</span><br><span class="line"><span class="comment"># 指定Mysql的数据目录</span></span><br><span class="line">MYSQL_DATADIR</span><br></pre></td></tr></table></figure>

<h3 id="Mysql环境变量配置"><a href="#Mysql环境变量配置" class="headerlink" title="Mysql环境变量配置"></a>Mysql环境变量配置</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/mysql/bin/</span><br><span class="line"><span class="comment"># 将环境变量追加到 /etc/profile</span></span><br><span class="line"><span class="built_in">source</span> /ect/profile</span><br><span class="line"><span class="comment"># 查看环境变量是否生效</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>

<h3 id="Mysql的启动步骤"><a href="#Mysql的启动步骤" class="headerlink" title="Mysql的启动步骤"></a>Mysql的启动步骤</h3><p>1.更新配置</p>
<p>2.数据库初始化</p>
<p>3.启动数据库</p>
<h3 id="更新Mysql配置"><a href="#更新Mysql配置" class="headerlink" title="更新Mysql配置"></a>更新Mysql配置</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置路径  /etc/my.cnf</span></span><br><span class="line">[mysqld]</span><br><span class="line">bind-address=0.0.0.0</span><br><span class="line">port=3306</span><br><span class="line">datadir=/data/mysql</span><br><span class="line">user=mysql</span><br><span class="line">skip-name-resolve</span><br><span class="line">long_query_time=2</span><br><span class="line">slow_query_log_file=/data/mysql/mysql-slow.log</span><br><span class="line">expire_logs_days=2</span><br><span class="line">innodb_flush_log_at_trx_commit=2</span><br><span class="line">log_warnings=1</span><br><span class="line">max_allowed_packet=512M</span><br><span class="line">connect_timeout=120</span><br><span class="line">[mysqld_safe]</span><br><span class="line">log_error=/data/mysql/mysqld.log</span><br><span class="line">pid-file=/data/mysqld/mysqld.pid</span><br></pre></td></tr></table></figure>

<h3 id="Mysql数据库初始化"><a href="#Mysql数据库初始化" class="headerlink" title="Mysql数据库初始化"></a>Mysql数据库初始化</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -pv /data/mysql</span><br><span class="line">chown -R mysql:mysql /usr/<span class="built_in">local</span>/mysql /data/mysql/</span><br><span class="line">yum install -y perl-Module-Install</span><br><span class="line">/usr/<span class="built_in">local</span>/mysql/scripts/mysql_install_db --basedir=/usr/<span class="built_in">local</span>/mysql --user=mysql --datadir=/data/mysql/</span><br></pre></td></tr></table></figure>

<h3 id="使用systemctl管理mysqld"><a href="#使用systemctl管理mysqld" class="headerlink" title="使用systemctl管理mysqld"></a>使用systemctl管理mysqld</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置文件的路径  /usr/lib/systemd/systemd/mysqld.service</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=mysqld</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/etc/init.d/mysqld start</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>

<h3 id="启动Mysql服务器"><a href="#启动Mysql服务器" class="headerlink" title="启动Mysql服务器"></a>启动Mysql服务器</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure>

<h3 id="验证Mysql是否启动"><a href="#验证Mysql是否启动" class="headerlink" title="验证Mysql是否启动"></a>验证Mysql是否启动</h3><p>1.查看进程 ps -ef | grep mysql</p>
<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206222916.png"></p>
<p> 2.查看监听 netstat -tunlp | grep mysql</p>
<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206222946.png"></p>
<p>3.查看日志 cat /data/mysql/mysqld.log</p>
<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206223018.png"></p>
<h3 id="Mysql的安全方式"><a href="#Mysql的安全方式" class="headerlink" title="Mysql的安全方式"></a>Mysql的安全方式</h3><p>1.mysql能限制ip访问、访问需要用户名密码、mysql权限还能细分<br>2.默认让127.0.0.1访问，用户名root，不需要密码<br>3.mysql -uroot -h 127.0.0.1 -A</p>
<h3 id="Mysql添加密码"><a href="#Mysql添加密码" class="headerlink" title="Mysql添加密码"></a>Mysql添加密码</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 给mysql数据库root用户添加密码root</span></span><br><span class="line">mysqladmin -h 127.0.0.1 -uroot password <span class="string">&#x27;root&#x27;</span></span><br><span class="line"><span class="comment"># 用root密码验证登录</span></span><br><span class="line">mysql -h 127.0.0.1 -uroot -proot -A</span><br></pre></td></tr></table></figure>

<h3 id="Mysql授权某ip登录并指定用户名"><a href="#Mysql授权某ip登录并指定用户名" class="headerlink" title="Mysql授权某ip登录并指定用户名"></a>Mysql授权某ip登录并指定用户名</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 添加192.168.0.X段的ip允许网络访问Mysql数据库</span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;192.168.0.%&#39; IDENTIFIED BY &#39;root&#39; WITH GRANT OPTION;</span><br><span class="line"># 刷新mysql权限的相关表</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>

<h3 id="网络登录Mysql"><a href="#网络登录Mysql" class="headerlink" title="网络登录Mysql"></a>网络登录Mysql</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Mysql数据库服务器地址:192.168.4.99</span></span><br><span class="line"><span class="comment"># 我用另外一台linux机器:192.168.4.98 网络登录Mysql数据库访问</span></span><br><span class="line">mysql -h 192.168.4.99 -uroot -proot -A</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206223324.png"></p>
]]></content>
      <categories>
        <category>Linux运维</category>
      </categories>
      <tags>
        <tag>LNMP</tag>
      </tags>
  </entry>
  <entry>
    <title>LNMP之Nginx服务器搭建</title>
    <url>/2020/12/06/LNMP%E4%B9%8BNginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="002-LNMP之Nginx服务器搭建"><a href="#002-LNMP之Nginx服务器搭建" class="headerlink" title="002-LNMP之Nginx服务器搭建"></a>002-LNMP之Nginx服务器搭建</h1><h2 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h2><p><strong>常见Web服务器：</strong></p>
<p>1、Apache</p>
<p>2、Nginx</p>
<p>以上是常见的两种web服务器，这里我选择Nginx，因为安装和配置都比较简洁，功能也强大，满足日常的反向代理，负载均衡等功能。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="Nginx服务器的编译安装"><a href="#Nginx服务器的编译安装" class="headerlink" title="Nginx服务器的编译安装"></a><strong>Nginx服务器的编译安装</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 首先是安装Nginx所需要的一些依赖包</span></span><br><span class="line">yum install -y wget gcc gcc-c++ make pcre pcre-devel zlib zlib-devel openssl openssl-devel</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206215646.png"></p>
<p>这里不得不提一句：yum大法好呀，自己会去找依赖所需要的依赖，出现Complete就是完成了。</p>
<p>然后就是去Nginx官网下载源码包，进行编译安装的操作。</p>
<p>贴个Nginx下载的传送门：<a href="http://nginx.org/download/nginx-1.18.0.tar.gz">点我下载Nginx</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载路径我选择到 /usr/local/src</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src</span><br><span class="line">wget http://nginx.org/download/nginx-1.18.0.tar.gz</span><br><span class="line">tar -zxvf nginx-1.18.0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> nginx-1.18.0</span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/nginx</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<a id="more"></a>
<h3 id="手动启动和关闭Nginx"><a href="#手动启动和关闭Nginx" class="headerlink" title="手动启动和关闭Nginx"></a><strong>手动启动和关闭Nginx</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置环境变量</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/nginx/sbin/</span><br><span class="line"><span class="comment"># 检查Nginx配置</span></span><br><span class="line">nginx -t</span><br><span class="line"><span class="comment"># 启动Nginx</span></span><br><span class="line">nginx</span><br><span class="line"><span class="comment"># 关闭Nginx</span></span><br><span class="line">nginx -s stop</span><br></pre></td></tr></table></figure>

<p>设置完系统环境变量后，记得source立即生效一下。</p>
<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206220007.png"></p>
<h3 id="验证Nginx是否安装成功"><a href="#验证Nginx是否安装成功" class="headerlink" title="验证Nginx是否安装成功"></a><strong>验证Nginx是否安装成功</strong></h3><p>1.查看进程</p>
<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206220051.png"></p>
<p> 2.查看监听端口</p>
<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206220118.png"></p>
<p> 3.nginx日志访问</p>
<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206220203.png"></p>
<p>4.浏览器访问</p>
<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206220247.png"></p>
<h3 id="使用systemctl管理Nginx"><a href="#使用systemctl管理Nginx" class="headerlink" title="使用systemctl管理Nginx"></a><strong>使用systemctl管理Nginx</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置路径</span></span><br><span class="line">/usr/lib/systemd/system/nginx.service</span><br><span class="line"><span class="comment"># 配置内容</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=nginx</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/nginx/sbin/nginx</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>

<p> 然后就可以用systemctl管理nginx服务了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动nginx服务</span></span><br><span class="line">systemctl start nginx</span><br><span class="line"><span class="comment"># 查看nginx服务状态</span></span><br><span class="line">systemctl status nginx</span><br><span class="line"><span class="comment"># 重启nginx服务</span></span><br><span class="line">sytemctl restart nginx</span><br><span class="line"><span class="comment"># 停止nginx服务</span></span><br><span class="line">systemctl stop nginx</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux运维</category>
      </categories>
      <tags>
        <tag>LNMP</tag>
      </tags>
  </entry>
  <entry>
    <title>LNMP之PHP环境搭建</title>
    <url>/2020/12/06/LNMP%E4%B9%8BPHP%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="003-LNMP之PHP环境搭建"><a href="#003-LNMP之PHP环境搭建" class="headerlink" title="003-LNMP之PHP环境搭建"></a>003-LNMP之PHP环境搭建</h1><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a><strong>正文</strong></h2><p>php官网：<a href="https://www.php.net/">https://www.php.net/</a></p>
<p>搜狐镜像源：<a href="http://mirrors.sohu.com/">http://mirrors.sohu.com/</a> （推荐，国内源下载速度嗖嗖的）</p>
<h3 id="php编译安装前解决依赖包"><a href="#php编译安装前解决依赖包" class="headerlink" title="php编译安装前解决依赖包"></a>php编译安装前解决依赖包</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install epel-release</span><br><span class="line">yum -y install gcc gcc-c++ make pcre pcre-devel zlib zlib-devel openssl openssl-devel libxml2 libxml2-devel libcurl libcurl-devel libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel openldap openldap-devel libmcrypt libmcrypt-devel sqlite sqlite-devel oniguruma-devel oniguruma</span><br></pre></td></tr></table></figure>

<h3 id="源码编译安装php"><a href="#源码编译安装php" class="headerlink" title="源码编译安装php"></a>源码编译安装php</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/php --with-config-file-path=/usr/<span class="built_in">local</span>/php/etc --enable-ctype --with-mysql=mysqlnd --with-mysqli=mysqlnd --with-freetype-dir --with-jpeg-dir --with-png-dir --with-libxml-dir=/usr --enable-xml --disable-rpath --enable-bcmath --enable-shmop --enable-sysvsem --enable-inline-optimization --with-curl --enable-mbregex --enable-mbstring --with-mcrypt --with-gd --enable-gd-native-ttf --with-openssl --with-mhash --enable-pcntl --enable-sockets --with-ldap-sasl --with-xmlrpc --enable-zip --enable-soap --with-gettext --enable-fpm</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="comment"># 在/usr/local/php/etc目录下，默认是没有php.ini这个配置文件的，需要拷贝一个过去</span></span><br><span class="line"><span class="comment"># 拷贝的文件路径/usr/local/src/php-7.4.7</span></span><br><span class="line">cp /usr/<span class="built_in">local</span>/src/php-7.4.7/php.ini-production /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br></pre></td></tr></table></figure>

<a id="more"></a>he
<h3 id="php编译安装说明"><a href="#php编译安装说明" class="headerlink" title="php编译安装说明"></a>php编译安装说明</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">--prefix 指定php的安装目录</span><br><span class="line">--with-config-file-path 指定php的配置文件位置</span><br><span class="line">--with-mysql 让php可以操作mysql</span><br><span class="line">--enable-fpm 主要是nginx要来调用php语言使得php-fpm</span><br></pre></td></tr></table></figure>

<h3 id="启动php-fpm"><a href="#启动php-fpm" class="headerlink" title="启动php-fpm"></a>启动php-fpm</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 环境变量</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/php/sbin/:/usr/<span class="built_in">local</span>/php/bin/</span><br><span class="line"><span class="comment"># 检查配置文件</span></span><br><span class="line">php-fpm -t</span><br><span class="line"><span class="comment"># 使用默认配置文件</span></span><br><span class="line">mv /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf.default /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br><span class="line"><span class="comment"># 查看php-fpm的listen配置</span></span><br></pre></td></tr></table></figure>

<h3 id="验证php-fpm的启动"><a href="#验证php-fpm的启动" class="headerlink" title="验证php-fpm的启动"></a>验证php-fpm的启动</h3><p>1.进程</p>
<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206221352.png"></p>
<p>2.端口</p>
<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206221427.png"></p>
<p>3.日志</p>
<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206221506.png"></p>
<h3 id="使用systemctl管理php-fpm"><a href="#使用systemctl管理php-fpm" class="headerlink" title="使用systemctl管理php-fpm"></a>使用systemctl管理php-fpm</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建配置文件的路径</span></span><br><span class="line">vi /usr/lib/systemd/system/php-fpm.service</span><br><span class="line"><span class="comment"># 配置内容：</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=php-fpm</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/php/sbin/php-fpm</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>

<h3 id="nginx-php-fpm结合的配置"><a href="#nginx-php-fpm结合的配置" class="headerlink" title="nginx+php-fpm结合的配置"></a>nginx+php-fpm结合的配置</h3><p>测试页代码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment"># test.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>nginx默认配置无法处理php程序，只会下载，需要改配置文件nginx.conf</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">location</span> <span class="regexp">~ \.php$</span> &#123;</span><br><span class="line">            <span class="attribute">root</span>           html;</span><br><span class="line">            <span class="attribute">fastcgi_pass</span>   <span class="number">127.0.0.1:9000</span>;</span><br><span class="line">            <span class="attribute">fastcgi_index</span>  index.php;</span><br><span class="line">            <span class="comment"># 修改默认的/scripts为$document_root,去root-&gt;html下面找页面</span></span><br><span class="line">            <span class="attribute">fastcgi_param</span>  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</span><br><span class="line">            <span class="attribute">include</span>        fastcgi_params;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

<h3 id="页面test-php访问测试"><a href="#页面test-php访问测试" class="headerlink" title="页面test.php访问测试"></a>页面test.php访问测试</h3><p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206221756.png"></p>
<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a><strong>常见问题</strong></h2><h3 id="运行systemctl-start-php-fpm报错"><a href="#运行systemctl-start-php-fpm报错" class="headerlink" title="运行systemctl start php-fpm报错"></a>运行systemctl start php-fpm报错</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[30-Jun-2020 18:34:23] WARNING: Nothing matches the include pattern <span class="string">&#x27;/usr/local/php/etc/php-fpm.d/*.conf&#x27;</span> from /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf at line 125.</span><br><span class="line">[30-Jun-2020 18:34:23] ERROR: No pool defined. at least one pool section must be specified <span class="keyword">in</span> config file</span><br><span class="line">[30-Jun-2020 18:34:23] ERROR: failed to post process the configuration</span><br><span class="line">[30-Jun-2020 18:34:23] ERROR: FPM initialization failed</span><br></pre></td></tr></table></figure>

<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/php/etc/php-fpm.d/</span><br><span class="line">cp www.conf.default www.conf</span><br><span class="line">/usr/<span class="built_in">local</span>/php/sbin/php-fpm -t</span><br><span class="line"></span><br><span class="line">[30-Jun-2020 18:35:29] NOTICE: configuration file /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf <span class="built_in">test</span> is successful</span><br><span class="line">[root@localhost php-fpm.d]systemctl start php-fpm</span><br><span class="line">Starting php-fpm  <span class="keyword">done</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux运维</category>
      </categories>
      <tags>
        <tag>LNMP</tag>
      </tags>
  </entry>
  <entry>
    <title>Zabbix4.0网页汉化</title>
    <url>/2020/12/06/Zabbix%E7%BD%91%E9%A1%B5%E6%B1%89%E5%8C%96/</url>
    <content><![CDATA[<h1 id="007-Zabbix网页汉化实战"><a href="#007-Zabbix网页汉化实战" class="headerlink" title="007-Zabbix网页汉化实战"></a>007-Zabbix网页汉化实战</h1><h2 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a><strong>背景介绍</strong></h2><p>Zabbix网页在设置成中文后，监测-&gt;图形里的监控图形会有乱码的产生。</p>
<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206232540.png"></p>
<p> 修改文中文后，出现乱码的情况。</p>
<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206232609.png"></p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a><strong>正文</strong></h2><p>解决zabbix部分乱码的情况。</p>
<h3 id="下载微软雅黑字体"><a href="#下载微软雅黑字体" class="headerlink" title="下载微软雅黑字体"></a>下载微软雅黑字体</h3><p>网盘链接: <a href="https://pan.baidu.com/s/1C40EzFfgOFWYCcepTUMeMQ">https://pan.baidu.com/s/1C40EzFfgOFWYCcepTUMeMQ</a>  密码: 0951</p>
<a id="more"></a>
<h3 id="字体的存放目录"><a href="#字体的存放目录" class="headerlink" title="字体的存放目录"></a>字体的存放目录</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/nginx/html/zabbix/fonts</span><br></pre></td></tr></table></figure>

<h3 id="上传微软雅黑字体"><a href="#上传微软雅黑字体" class="headerlink" title="上传微软雅黑字体"></a>上传微软雅黑字体</h3><h3 id="字体配置修改"><a href="#字体配置修改" class="headerlink" title="字体配置修改"></a>字体配置修改</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /usr/<span class="built_in">local</span>/nginx/html/zabbix/include/defines.inc.php</span><br></pre></td></tr></table></figure>

<p>默认是DejaVuSans字体，改成msyh微软雅黑字体</p>
<h3 id="验证乱码问题是否解决"><a href="#验证乱码问题是否解决" class="headerlink" title="验证乱码问题是否解决"></a>验证乱码问题是否解决</h3><p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206232958.png"></p>
]]></content>
      <categories>
        <category>Linux运维</category>
      </categories>
      <tags>
        <tag>Zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux开机模式和网络设置</title>
    <url>/2020/12/06/Linux%E5%BC%80%E6%9C%BA%E6%A8%A1%E5%BC%8F%E5%92%8C%E7%BD%91%E7%BB%9C%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="001-Linux开机模式和网络设置"><a href="#001-Linux开机模式和网络设置" class="headerlink" title="001-Linux开机模式和网络设置"></a>001-Linux开机模式和网络设置</h1><h2 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h2><p>准备3台服务器（虚拟机环境），一台打算当做Web服务器（Nginx），另外2台备用。考虑到对物理机性能的占用，故采用命令行启动的模式。</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="修改开机模式为命令模式"><a href="#修改开机模式为命令模式" class="headerlink" title="修改开机模式为命令模式"></a><strong>修改开机模式为命令模式</strong></h3><p>3台服务器分别取名为server001、server002、server003，都安装Centos7后，修改配置文件，开机到命令行模式。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/inittab  <span class="comment">#修改配置文件的路径 </span></span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206214018.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">multi-user.target  <span class="comment">#指的就是命令模式</span></span><br><span class="line">graphical.target  <span class="comment">#指的就是GUI模式</span></span><br></pre></td></tr></table></figure>

<p>修改完之后，reboot一下就能看到效果了。</p>
<a id="more"></a>
<h3 id="在命令模式下设置网络配置"><a href="#在命令模式下设置网络配置" class="headerlink" title="在命令模式下设置网络配置"></a><strong>在命令模式下设置网络配置</strong></h3><p>首先用ifconfig查看一下自己网卡的信息。</p>
<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206214206.png"></p>
<p>可以看到我的网卡名称为：eno16777736，另外一个是回环地址的网卡，不用去管。</p>
<p>然后去修改这个网卡配置的信息。</p>
<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206214249.png"></p>
<p>修改内容如下：</p>
<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206214322.png"></p>
<p> 然后route-n查看一下路由信息：</p>
<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206214500.png"></p>
<p> 同样方法设置server001和server003,然后检查一下3台服务器的网络连接就行了。</p>
<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206214538.png"></p>
]]></content>
      <categories>
        <category>Linux运维</category>
      </categories>
      <tags>
        <tag>LNMP</tag>
      </tags>
  </entry>
  <entry>
    <title>LNMP环境连接Mysql测试</title>
    <url>/2020/12/06/LNMP%E7%8E%AF%E5%A2%83%E8%BF%9E%E6%8E%A5Mysql%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<h1 id="005-LNMP环境连接Mysql测试"><a href="#005-LNMP环境连接Mysql测试" class="headerlink" title="005-LNMP环境连接Mysql测试"></a>005-LNMP环境连接Mysql测试</h1><h2 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a><strong>背景介绍</strong></h2><p>用户通过浏览器访问Nginx -&gt; html下的mysql.php文件，去连接Mysql数据库的一个测试</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a><strong>正文</strong></h2><h3 id="LNMP服务检查"><a href="#LNMP服务检查" class="headerlink" title="LNMP服务检查"></a>LNMP服务检查</h3><p>检查确保Linux、nginx、php-fpm、mysql的服务都是正常启动的</p>
<h3 id="Mysql测试代码编写"><a href="#Mysql测试代码编写" class="headerlink" title="Mysql测试代码编写"></a>Mysql测试代码编写</h3><p>这里要说明一下，PHP5和PHP7连接Mysql的区别还是挺大的，不要翻车了。</p>
<p>PHP5使用mysql_connect函数来进行Mysql数据库的连接操作。</p>
<p>PHP7已经摒弃了这个函数，改成了mysqli_connect()函数，面向对象的写法：</p>
<p>变量名 = new mysqli(主机地址，用户名，密码，数据库名)；</p>
<p>下面是测试代码mysql.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$servername</span> = <span class="string">&quot;192.168.0.99&quot;</span>;</span><br><span class="line"><span class="variable">$username</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$password</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 创建连接</span></span><br><span class="line"><span class="variable">$conn</span> = <span class="keyword">new</span> mysqli(<span class="variable">$servername</span>, <span class="variable">$username</span>, <span class="variable">$password</span>);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 检测连接</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$conn</span>-&gt;connect_error) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;连接失败: &quot;</span> . <span class="variable">$conn</span>-&gt;connect_error);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;连接成功&quot;</span>;</span><br><span class="line">   phpinfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<a id="more"></a>
<h3 id="Mysql连接结果验证"><a href="#Mysql连接结果验证" class="headerlink" title="Mysql连接结果验证"></a>Mysql连接结果验证</h3><p>1.连接成功的界面</p>
<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206225701.png"></p>
<p>2.连接失败的界面</p>
<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206225734.png"></p>
]]></content>
      <categories>
        <category>Linux运维</category>
      </categories>
      <tags>
        <tag>LNMP</tag>
      </tags>
  </entry>
  <entry>
    <title>Zabbix4.0版本编译安装</title>
    <url>/2020/12/06/Zabbix%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h1 id="006-Zabbix4-0版本编译安装"><a href="#006-Zabbix4-0版本编译安装" class="headerlink" title="006-Zabbix4.0版本编译安装"></a>006-Zabbix4.0版本编译安装</h1><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a><strong>正文</strong></h2><h3 id="Zabbix源码编译安装"><a href="#Zabbix源码编译安装" class="headerlink" title="Zabbix源码编译安装"></a>Zabbix源码编译安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># zabbix的一些依赖包安装</span></span><br><span class="line">yum install -y libevent-devel wget tar gcc gcc-c++ make net-snmp-devel libxml2-devel libcurl-devel</span><br><span class="line"><span class="comment"># 创建启动进程的用户zabbix</span></span><br><span class="line">useradd -s /sbin/nologin zabbix</span><br><span class="line"><span class="comment"># zaibbx的tar下载</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/</span><br><span class="line">wget https://nchc.dl.sourceforge.net/project/zabbix/ZABBIX Latest Stable/4.0.3/zabbix-4.0.3.tar.gz</span><br><span class="line"><span class="comment"># 解压zabbix的tar包</span></span><br><span class="line">tar -zxvf zabbix-4.0.3.tar.gz</span><br><span class="line"><span class="built_in">cd</span> zabbix-4.0.3</span><br><span class="line"><span class="comment"># zabbix编译安装</span></span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/zabbix --enable-server --enable-agent --with-mysql=/usr/<span class="built_in">local</span>/mysql/bin/mysql_config --with-net-snmp --with-libcurl --with-libxml2</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<h3 id="Zabbix编译参数说明"><a href="#Zabbix编译参数说明" class="headerlink" title="Zabbix编译参数说明"></a>Zabbix编译参数说明</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">--prefix 指定安装的目录</span><br><span class="line">--enable-server 安装zabbix-server</span><br><span class="line">--enable-agent 安装zabbix-agent</span><br><span class="line">--with-mysql 用mysql来进行存储</span><br></pre></td></tr></table></figure>

<a id="more"></a>
<h3 id="Zabbix-server的安装验证"><a href="#Zabbix-server的安装验证" class="headerlink" title="Zabbix server的安装验证"></a>Zabbix server的安装验证</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 环境变量设置</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/zabbix/sbin/:/usr/<span class="built_in">local</span>/zabbix/bin/</span><br><span class="line"><span class="comment"># 查看版本:</span></span><br><span class="line">zabbix_server --version</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206231230.png"></p>
<h3 id="Zabbix-server的启动"><a href="#Zabbix-server的启动" class="headerlink" title="Zabbix server的启动"></a>Zabbix server的启动</h3><p>1.需要到mysql里做数据库初始化<br>2.配置zabbix server<br>3.启动zabbix server</p>
<h3 id="Mysql数据库初始化"><a href="#Mysql数据库初始化" class="headerlink" title="Mysql数据库初始化"></a>Mysql数据库初始化</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 登录到Mysql数据库</span></span><br><span class="line">mysql -h 127.0.0.1 -uroot -proot -A</span><br><span class="line"><span class="comment"># 创建数据库zabbix</span></span><br><span class="line">create database zabbix character <span class="built_in">set</span> utf8 collate utf8_bin;</span><br><span class="line">grant all privileges on zabbix.* to zabbix@<span class="string">&#x27;127.0.0.1&#x27;</span> identified by <span class="string">&#x27;19941127&#x27;</span>;</span><br><span class="line">flush privileges;</span><br><span class="line"><span class="built_in">set</span> names utf8;</span><br><span class="line"><span class="comment"># 在数据库zabbix中执行建表的sql脚本</span></span><br><span class="line">use zabbix;</span><br><span class="line"><span class="built_in">source</span> /usr/<span class="built_in">local</span>/src/zabbix-4.0.3/database/mysql/schema.sql</span><br><span class="line"><span class="built_in">source</span> /usr/<span class="built_in">local</span>/src/zabbix-4.0.3/database/mysql/data.sql</span><br><span class="line"><span class="built_in">source</span> /usr/<span class="built_in">local</span>/src/zabbix-4.0.3/database/mysql/images.sql</span><br></pre></td></tr></table></figure>

<h3 id="Zabbix-server的配置"><a href="#Zabbix-server的配置" class="headerlink" title="Zabbix server的配置"></a>Zabbix server的配置</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置文件的路径:/usr/local/zabbix/etc/zabbix_server.conf</span></span><br><span class="line">LogFile=/usr/<span class="built_in">local</span>/zabbix/zabbix_server.log</span><br><span class="line">DBHost=127.0.0.1</span><br><span class="line">DBName=zabbix</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=19941127</span><br><span class="line">DBPort=3306</span><br><span class="line">Timeout=30</span><br><span class="line">AlertScriptsPath=/usr/<span class="built_in">local</span>/zabbix/alertscripts</span><br><span class="line">ExternalScripts=/usr/<span class="built_in">local</span>/zabbix/externalscripts</span><br><span class="line">LogSlowQueries=3000</span><br></pre></td></tr></table></figure>

<h3 id="启动Zabbix-server"><a href="#启动Zabbix-server" class="headerlink" title="启动Zabbix server"></a>启动Zabbix server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 更改所属权限</span></span><br><span class="line">chown zabbix:zabbix -R /usr/<span class="built_in">local</span>/zabbix/</span><br><span class="line"><span class="comment"># 启动zabbix server</span></span><br><span class="line">zabbix_server</span><br></pre></td></tr></table></figure>

<h3 id="验证zabbix-server的启动"><a href="#验证zabbix-server的启动" class="headerlink" title="验证zabbix server的启动"></a>验证zabbix server的启动</h3><p>1.进程</p>
<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206231420.png"></p>
<p>2.端口</p>
<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206231446.png"></p>
<p>3.日志</p>
<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206231512.png"></p>
<h3 id="Zabbix-Web的安装"><a href="#Zabbix-Web的安装" class="headerlink" title="Zabbix Web的安装"></a>Zabbix Web的安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在nginx的html下建立zabbix的web文件夹</span></span><br><span class="line">mkdir /usr/<span class="built_in">local</span>/nginx/html/zabbix</span><br><span class="line"><span class="comment"># 从zabbix目录拷贝web页面到nginx下</span></span><br><span class="line">cp -a /usr/<span class="built_in">local</span>/src/zabbix-4.0.3/frontends/php/* /usr/<span class="built_in">local</span>/nginx/html/zabbix/</span><br></pre></td></tr></table></figure>

<h3 id="Zabbix-Web初始化"><a href="#Zabbix-Web初始化" class="headerlink" title="Zabbix Web初始化"></a>Zabbix Web初始化</h3><p>访问：<a href="http://192.168.0.98/zabbix/">http://192.168.0.98/zabbix/</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206231639.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置文件的路径:vi /usr/local/php/etc/php.ini</span></span><br><span class="line">post_max_size = 32M</span><br><span class="line">max_execution_time = 350</span><br><span class="line">max_input_time = 350</span><br><span class="line">date.timezone = Asia/Shanghai</span><br><span class="line">always_populate_raw_post_data = -1</span><br></pre></td></tr></table></figure>

<p>修改php.ini配置文件后，重启php-fpm.service</p>
<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206231727.png"></p>
<h3 id="登录Zabbix设置"><a href="#登录Zabbix设置" class="headerlink" title="登录Zabbix设置"></a>登录Zabbix设置</h3><p>1.默认用户名和密码：Admin zabbix<br>2.禁用Zabbix server主机的监控</p>
<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206231816.png"></p>
<p>3.禁用guest用户</p>
<p>说明：zabbix底层是通过禁用用户组来实现禁用用户的</p>
<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206231851.png"></p>
<p>4.更改Admin的密码，改成自己想要的密码</p>
<p><img src="https://cdn.jsdelivr.net/gh/charseki1994/images/img/20201206231916.png"></p>
]]></content>
      <categories>
        <category>Linux运维</category>
      </categories>
      <tags>
        <tag>Zabbix</tag>
      </tags>
  </entry>
</search>
